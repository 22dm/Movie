<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.cinema.data.sales.OrderMapper">

    <insert id="addOrder" parameterType="com.example.cinema.po.Order" useGeneratedKeys="true" keyProperty="id">
        insert into `order`(userId, scheduleId, time, status, method, price)
        values (#{userId}, #{scheduleId}, #{time}, #{status}, #{method}, #{price})
    </insert>

    <insert id="addSeat" parameterType="com.example.cinema.po.Seat">
        insert into seat(orderId, columnIndex, rowIndex)
        values (#{orderId}, #{columnIndex}, #{rowIndex})
    </insert>

    <update id="payOrder" parameterType="com.example.cinema.po.OrderPay">
        update `order`
        set status = 1, price = #{price}, method = #{method}
        where id = #{orderId}
    </update>

    <select id="selectSeatsBySchedule" resultType="com.example.cinema.po.Seat">
        select `columnIndex`, `rowIndex`
        from `seat`, `order`
        where `orderId` = `order`.id and scheduleId=#{scheduleId} and status in (0, 1)
    </select>

    <select id="selectSeatsByOrderId" resultType="com.example.cinema.po.Seat">
        select `columnIndex`, `rowIndex`
        from `seat`
        where `orderId` = #{orderId}
    </select>

    <select id="selectOrdersByUserId" resultType="com.example.cinema.po.Order">
        select *
        from `order`
        where userId=#{scheduleId}
    </select>

    <select id="selectOrdersById" resultType="com.example.cinema.po.Order">
        select *
        from `order`
        where id=#{id}
    </select>

    <select id="selectRefund" resultType="com.example.cinema.po.Refund">
        select * from refund order by hours desc
    </select>

    <select id="selectGet" resultType="double">
        select get from refund where hours=#{hours}
    </select>

    <insert id="insertRefund" parameterType="com.example.cinema.po.Refund">
        insert into refund(hours, get)
        values(#{hours}, #{get})
    </insert>

    <delete id="deleteRefund">
        delete from refund where hours=#{hours}
    </delete>

    <insert id="refund">
        update `order`
        set status = 2
        where id = #{orderId}
    </insert>

    <update id="cleanExpiredTicket">
        update ticket
        SET state = 2
        WHERE timestampdiff(minute, time, now()) > 15
          and state = 0;
    </update>

</mapper>